<div class="comment" id="comment-<%= comment.id %>" >
  <p class="text-muted">
    <%= if comment.created_at == comment.updated_at then 'Added by' else 'Updated by' end %>
    <strong>
      <% if comment.user %>
        <%= link_to comment.user.username, user_lists_path(comment.user.username) %>
      <% else %>
        [deleted]
      <% end %>
    </strong>
    on <%= l(comment.updated_at, format: '%B, %d %Y %H:%M:%S') %>
  </p>
  <% comment_content = wrap_on_line_breaks comment.content %>
  <%= content_tag(:span, comment_content, class: "content") %>
  <ul>
    <li id="comment-vote-<%= comment.id %>">
      <toggle-vote
        :initial-like="<%= user_signed_in? && current_user.voted_for?(comment) %>"
        vote-url="<%= comment_vote_url(comment) %>"
        votable-class="comment"
        initial-vote-count="<%= comment.get_likes.size.to_s %>"
      ></toggle-vote>
    </li>
    <li><%= (link_to 'reply', "#", class: 'toggle-reply btn btn-link btn-xs', 'data-parent-comment-id' => comment.id) if current_user %></li>
    <% if current_user == comment.user %>
      <li><%= link_to 'edit', edit_comment_path(comment), remote: true, class: "edit-comment btn btn-link btn-xs" %></li>
      <li><%= link_to 'delete', comment_path(comment), remote: true, class: "text-danger small", method: :delete %><li>
    <% elsif current_user_can_moderate?(list_for_authorization) %>
      <li><%= link_to 'delete', comment_path(comment), remote: true, class: "text-danger small", method: :delete %><li>
    <% end %>
  </ul>
  <%= render('comments/form', comment: comment.children.build, hidden: true) if current_user %>

  <%= yield %>
</div>
