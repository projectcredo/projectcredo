<%= render 'list_head', list: @list %>

<h2 class= "list-title"><%= @list.name %></h2>
<div class="list-nav">
  by <%= link_to @list.owner.username, user_lists_path(@list.owner) %>
  <% if current_user %>
    <% if current_user.can_edit? @list %>
     - <%= link_to 'Edit', edit_user_list_path(@list.owner, @list) %>
   <% end %>
    <% if @list.owner == current_user %>
       - <%= link_to 'Delete List', user_list_path(@list.owner, @list), data: { confirm: 'Are you sure?' }, method: :delete %>
    <% end %>
  <% end %>

  <% if @list.access == 'contributors' %>
   <span data-toggle="tooltip" data-placement="right" title="Only contibutors may edit or add references to this list"> üîí </span>
  <% else %>
    <span data-toggle="tooltip" data-placement="right" title="Anyone may edit or add references to this list"> üåé </span>
  <% end %>

</div>

<div class="container" id='list-show'>
  <div class="row">
    <div class="col-md-8">
      <p>
        <% @list.tag_list.each do |tag| %>
          <a class="btn btn-default btn-xs"><%= tag %></a>
        <% end %>
      </p>
      <strong>Description</strong>
      <%= transform_text @list.description %>
      <%= render 'crossref/search', list: @list %>
      <%= render 'lists/add_reference', list: @list %>
      <% reference_count = @list.references.count %>
      <% if reference_count > 0 %>
        <%= render 'papers/sort_by' %>
        <i><%= reference_count%> papers added to this list</i>
      <% end %>
      <%= render partial: 'references/reference', collection: @references, locals: {show_comments: false} %>
    </div>
    <div class="col-md-4 list-comments">
      <strong>Comments on <%= @list.name %></strong>
      <div id="comments-<%= @list.id %>">
        <%= render 'commentables/comments', commentable: @list, list_for_authorization: @list %>
      </div>
    </div>
  </div>
  <button
    v-if="showPopupFlag"
    class="highlight-popup"
    :style="{left: this.highlightLeft+'px', top: this.highlightTop+'px'}"
    @click="submitHighlight"
  >üñäÔ∏è</button>
</div>

<% content_for(:page_app) do %>
  <script>
    var HighlightableText = {
      template: `
        <div class="highlightable-text" @click="emitShowPopup">
          <slot></slot>
        </div>
      `,
      methods: {
        emitShowPopup() {
          var highlight = this
          window.setTimeout(function() {
            var selection = window.getSelection().toString()
            if (selection.length > 1 && selection.match(/[^\s]/)) {
              highlight.$emit('show-popup')
            } else {
              highlight.$emit('hide-popup')
            }
          }, 300)
        }
      }
    }

    var listShow = new Vue({
      el: '#list-show',
      data: {
        showPopupFlag: false,
        paperId: null,
        highlightLeft: 0,
        highlightTop: 0
      },
      components: {
        'highlightable-text': HighlightableText
      },
      methods: {
        showPopup(showPopupFlag, paperId) {
          this.showPopupFlag = showPopupFlag
          if (this.showPopupFlag) {
            this.paperId = paperId
            this.position()
          } else {
            this.paperId = null
          }
        },
        position() {
          var range = window.getSelection().getRangeAt(0)
          var rect = range.getBoundingClientRect()
          var popupWidth = 30
          var popupHeight = 30

          this.highlightLeft = rect.left + window.scrollX + (rect.width / 2) - (popupWidth / 2)
          this.highlightTop = rect.top + window.scrollY - popupHeight
        },
        submitHighlight() {
          var highlightApp = this
          var selection = window.getSelection()
          var selectionText = selection.toString()

          $.ajax({
            type:'POST',
            url: '/papers/' + this.paperId + '/highlights',
            data: {
              highlight: {substring: selectionText}
            },
            // This "complete" syntax is only necessary because jQuery
            // doesn't understand the "head :created" response. It needs to
            // parse a json response for .done() to function correctly.
            complete: function(e) {
              if (e.status === 201) {
                var range = selection.getRangeAt(0)
                var highlightMark = document.createElement('mark')

                highlightMark.appendChild(
                  document.createTextNode(selectionText)
                )

                range.deleteContents()
                range.insertNode(highlightMark)
              } else {
                console.log('Highlight creation failed with substring: "' + selectionText + '"')
              }
              highlightApp.showPopupFlag = false
            }
          })
        }
      }
    })
  </script>
<% end %>
